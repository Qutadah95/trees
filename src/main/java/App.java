/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static void main(String[] args) {

        Node<Integer> node1 = new Node(80);
        Node<Integer> node2 = new Node(95);
        Node<Integer> node3 = new Node(110);

        Node<Integer> node4 = new Node(90, node1, node2);
        Node<Integer> node5 = new Node(120, node3, null);

        Node<Integer> root = new Node(100, node4, node5);
        BinaryTree binaryTree = new BinaryTree();
        System.out.println("Pre Order");
        System.out.println(binaryTree.preOrder(root));
        System.out.println("=================================");
        System.out.println("In Order");
        System.out.println(binaryTree.inOrder(root));
        System.out.println("=================================");
        System.out.println("Post Order");
        System.out.println(binaryTree.postOrder(root));

        System.out.println("=================================");
        System.out.println("Binary Search");
        System.out.println("=================================");
        System.out.println("=================================");
        System.out.println("Add method");
        Integer testValue=140;
        BinarySearchTree binarySearchTreeAdd = new BinarySearchTree(root);
        binarySearchTreeAdd.add(testValue);
        System.out.println(binarySearchTreeAdd.inOrder(root));
        System.out.println("=================================");
        System.out.println("Contains method");
        Integer valueToSearch = 100;
        BinarySearchTree binarySearchTreeContains = new BinarySearchTree(root);
        System.out.println("Is the tree contains " + valueToSearch + " ? the result is : " + binarySearchTreeContains.contains(valueToSearch));
    }
}
